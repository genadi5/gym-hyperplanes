1. Classification --> in progress --> Done
2. Export to specific file --> Done
3. Variables should be greater than their minimum and not greater than 0 --> Done
4. Multi-threading on execution --> in progress --> Done
5. If we have two areas (one in another) have same boundary than we have to do something with this --> Not relevant
7. Optimization of reward calculation --> Done
13. which part of actions should be movement of hyperplane from all the movements --> Done
8. Full loop: --> Done
    a. Train some reliable classification model
    b. get train and build hyperplane system with high prediction score
    c. get instances and propose change to get them to some class
    d. Check proposed changes in models from a.
16. Probabilities - not only probability but also the amount of instances --> Done
6. KERAS DQN --> Done

9. Maybe change reward evaluation - for example amount of grouped/isolated (by sufficient accuracy) but not including singles
17. Feature - Probability of class to use - when to use it in selection of the nearest class
15. Feature - Set of points from the nearest class area
19. Clean up project
10. Further performance optimization - find where we loose
11. Documentation
12. ??? Limit minimum of instances in area from below, meaning that 1 instance (for example) in area is not acceptable
18. ???If no changes on execution - don't continue
19. Configure episode steps in properties file